version: "3.8"

services:
  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -p 5433" ]
      interval: 5s
      timeout: 5s
      retries: 6
    command: -p 5433
    ports:
      - "5433:5433"

  keycloak-service:
    image: quay.io/keycloak/keycloak:latest
    volumes:
      - ./config/keycloak/realms:/opt/keycloak/data/import
      - ./config/keycloak/health-check.sh:/opt/keycloak/health-check.sh
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: localhost
      DB_PORT: 5433
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      KC_HTTP_PORT: 8180
      KC_HEALTH_ENABLED: true
    command: -v start-dev --import-realm
    healthcheck:
      test: "bash /opt/keycloak/health-check.sh"
      interval: 10s
      retries: 5
      timeout: 5s
    depends_on:
      keycloak-db:
        condition: service_healthy
    network_mode: "host"

  quarkus-db:
    image: postgres:15
    environment:
      POSTGRES_DB: quarkus
      POSTGRES_USER: quarkus
      POSTGRES_PASSWORD: quarkus
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U quarkus" ]
      interval: 5s
      timeout: 5s
      retries: 6
    ports:
      - "5432:5432"

  quarkus-service:
    image: nanobreaker/reactive-todos-service:1.0.0-SNAPSHOT
    environment:
      QUARKUS_DATASOURCE_USERNAME: quarkus
      QUARKUS_DATASOURCE_PASSWORD: quarkus
      QUARKUS_DATASOURCE_REACTIVE_URL: postgresql://localhost:5432/quarkus
      QUARKUS_OIDC_AUTH_SERVER_URL: http://localhost:8180/realms/reactive-todos-realm
      QUARKUS_DOCKER_NETWORK: reactive-todos-network
    healthcheck:
      test: curl --fail http://localhost:8080/q/health/ready || exit 1
      interval: 10s
      retries: 5
      timeout: 5s
    depends_on:
      quarkus-db:
        condition: service_healthy
      keycloak-service:
        condition: service_healthy
    network_mode: "host"